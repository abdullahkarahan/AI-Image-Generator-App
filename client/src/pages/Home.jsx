import React, { useState, useEffect } from 'react';

import { Card, FormField, Loader } from '../components';

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }
  return (
    <h2 className="mt-5 font-bold text-[#242423] text-xl uppercase">{title}</h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);

  const [allPosts, setAllPosts] = useState(null);

  const [searchText, setSearchText] = useState('');

  const [searchTimeout, setSearchTimeout] = useState(null);

  const [searchedResults, setSearchedResults] = useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const response = await fetch(
          `${process.env.VITE_API_BASE_URL}/api/v1/post`,
          {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
            },
          }
        );
        if (response.ok) {
          const result = await response.json();

          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResults = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLocaleLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLocaleLowerCase())
        );

        setSearchedResults(searchResults);
      }, 500)
    );
  };

  return (
    <section className="max-w-7xl mx-auto">
      <div className="backdrop-blur-sm bg-white/30 sm:p-8 px-4 py-8 rounded-md flex flex-col justify-center items-center">
        <h1 className="font-extrabold text-[#242423] text-[32px]">
          The AI Image Community
        </h1>
        <p className="mt-2 text-[#403d39] text-[16px] ">
          Browse through a collection of imaginative and visually stunning
          images generated by AI
        </p>
      </div>
      <div className="mt-16 backdrop-blur-sm bg-white/30 sm:p-8 px-4 py-8 rounded-md">
        <FormField
          LabelName="Search posts"
          type="text"
          name="text"
          placeholder="Search posts"
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>
      <div className="mt-10 backdrop-blur-sm bg-white/30 sm:p-8 px-4 py-8 rounded-md">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#ced4da] text-xl mb-3">
                Showing results for{' '}
                <span className="text-[#242423]">{searchText}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title="No search results found"
                />
              ) : (
                <RenderCards data={allPosts} title="No posts found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
